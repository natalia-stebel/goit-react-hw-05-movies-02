{"version":3,"file":"static/js/535.cf351857.chunk.js","mappings":"oVAEAA,IAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAa,kCACpBC,EAAU,mCASHC,EAAkB,mCAAG,oGACTH,IAAAA,IAAA,oCAAuCE,IAD9B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,gCACIE,EADJ,iCACoCK,EADpC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,IAAAA,IAAA,iBACXS,EADW,oBACQP,EADR,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAS,mCAAG,WAAMD,GAAN,uFACAT,IAAAA,IAAA,iBACXS,EADW,4BACgBP,EADhB,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTM,EAAW,mCAAG,WAAMF,GAAN,uFACFT,IAAAA,IAAA,iBACXS,EADW,4BACgBP,EADhB,2BADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,kFCNxB,UA7BgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEML,GADcM,EAAAA,EAAAA,MACQN,QAM5B,OAJAO,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAYF,GAASQ,MAAK,SAAAC,GAAK,OAAIJ,EAAWI,EAAMC,QAArB,GAChC,GAAE,CAACV,KAGF,yBACGI,EAAQO,OAAS,GAChB,0BACGC,QAAQC,IAAIT,GACZA,EAAQU,KAAI,SAACC,EAAQC,GACpB,OACE,2BACE,mCAAWD,EAAOE,WAClB,6BAAKF,EAAOG,aAFLF,EAKZ,QAGH,uCAIP,C","sources":["components/services/api.js","components/views/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = 'a2d752373b5fc20ba7d7c26c66d25d31';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not found'));\n// }\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieReview = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport { movieReview } from '../services/api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const pickedMovie = useParams();\n  const movieId = pickedMovie.movieId;\n\n  useEffect(() => {\n    movieReview(movieId).then(movie => setReviews(movie.results));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {console.log(reviews)}\n          {reviews.map((review, index) => {\n            return (\n              <li key={index}>\n                <p>Author:{review.author}</p>\n                <p> {review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No Reviews</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["axios","POSTER_URL","API_KEY","fetchTrendingFilms","response","data","searchMovies","query","movieDetails","movieId","movieCast","movieReview","useState","reviews","setReviews","useParams","useEffect","then","movie","results","length","console","log","map","review","index","author","content"],"sourceRoot":""}