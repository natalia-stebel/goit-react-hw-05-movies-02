{"version":3,"file":"static/js/387.fa0cb602.chunk.js","mappings":"oVAEAA,IAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAa,kCACpBC,EAAU,mCASHC,EAAkB,mCAAG,oGACTH,IAAAA,IAAA,oCAAuCE,IAD9B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,gCACIE,EADJ,iCACoCK,EADpC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,IAAAA,IAAA,iBACXS,EADW,oBACQP,EADR,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAS,mCAAG,WAAMD,GAAN,uFACAT,IAAAA,IAAA,iBACXS,EADW,4BACgBP,EADhB,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTM,EAAW,mCAAG,WAAMF,GAAN,uFACFT,IAAAA,IAAA,iBACXS,EADW,4BACgBP,EADhB,2BADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,wHClCT,SAASO,IACtB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QAER,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAUD,GAASS,MAAK,SAAAd,GAAQ,OAAIY,EAAQZ,EAASW,KAArB,GACjC,GAAE,CAACN,KAGF,gCACGU,QAAQC,IAAIL,IACb,wBACGA,EAAKM,KAAI,SAAAC,GAAI,OACZ,2BACE,gBACEC,IAAKtB,EAAAA,GAAaqB,EAAKE,aACvBC,IAAKH,EAAKI,KACVC,MAAM,MACNC,OAAO,SAGT,uBAAIN,EAAKI,QACT,uBAAIJ,EAAKO,cATFP,EAAKQ,GADF,QAgBrB,C","sources":["components/services/api.js","components/views/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = 'a2d752373b5fc20ba7d7c26c66d25d31';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not found'));\n// }\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieReview = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { movieCast, POSTER_URL } from '../services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n// import imgErr from '../image/error.jpg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    movieCast(movieId).then(response => setCast(response.cast));\n  }, [movieId]);\n\n  return (\n    <>\n      {console.log(cast)}\n      <ul>\n        {cast.map(item => (\n          <li key={item.id}>\n            <img\n              src={POSTER_URL + item.profile_path}\n              alt={item.name}\n              width=\"100\"\n              height=\"150\"\n            />\n\n            <p>{item.name}</p>\n            <p>{item.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["axios","POSTER_URL","API_KEY","fetchTrendingFilms","response","data","searchMovies","query","movieDetails","movieId","movieCast","movieReview","Cast","useParams","useState","cast","setCast","useEffect","then","console","log","map","item","src","profile_path","alt","name","width","height","character","id"],"sourceRoot":""}